# https://aka.ms/yaml

variables:
- group: 'P12 Password'
- name: CMAKE_PREFIX_PATH
  value: /usr/local/opt/qt5/lib/cmake

jobs:
- job: 'Build_macOS'
  pool:
    vmImage: 'macos-10.15'
  steps:
  - script: git submodule update --init --recursive
    displayName: 'Checkout Submodules'

  - script: ./CI/install-dependencies-osx.sh
    displayName: 'Install Dependencies'

  - task: InstallAppleCertificate@2
    displayName: 'Load app signing certificate'
    inputs:
      certSecureFile: 'telley.p12'
      certPwd: $(codesign_password)
      keychain: temp

  - task: DownloadSecureFile@1
    displayName: 'Load sparkle update signing key'
    name: sparkleKey
    inputs:
      secureFile: 'TelleyPrivateDSAKey.pem'

  - script: ./CI/before-script-osx.sh
    displayName: 'Configure CMake'

  - bash: |
      cd ./build
      make -j4
      cd -
    displayName: 'Build'

  - script: ./CI/after-build-osx.sh
    displayName: 'Prepare app'
  
  - bash: |
      cd ./build
      codesign -v --deep -s "${CODESIGN_IDENTITY}" --force "Telley Viewer.app/Contents/Frameworks/Sparkle.framework/Versions/A/Resources/Autoupdate.app/Contents/MacOS/Autoupdate" -o runtime
      codesign -v --deep -s "${CODESIGN_IDENTITY}" --force "Telley Viewer.app/Contents/Frameworks/Sparkle.framework/Versions/A/Resources/Autoupdate.app/Contents/MacOS/fileop" -o runtime
      codesign -v --deep -s "${CODESIGN_IDENTITY}" --force "Telley Viewer.app/Contents/Frameworks/Sparkle.framework/Versions/A/Resources/Autoupdate.app" -o runtime
      codesign -v --deep -s "${CODESIGN_IDENTITY}" --force "Telley Viewer.app" -o runtime --entitlements "../CI/install/osx/entitlements.plist"
    displayName: 'Sign app'
    env:
      CODESIGN_IDENTITY: $(codesign_identity)

  - bash: |
      cd ./build
      xcrun altool --store-password-in-keychain-item "OBS-Codesign-Password" -u "${CODESIGN_IDENT_USER}" -p "${CODESIGN_IDENT_PASS}"
      xcnotary notarize "Telley Viewer.app" --developer-account "${CODESIGN_IDENT_USER}" --developer-password-keychain-item "OBS-Codesign-Password" --provider "${CODESIGN_IDENT_SHORT}"
      xcrun stapler staple "Telley Viewer.app"
    displayName: 'Notarize app'
    env:
      CODESIGN_IDENT_USER: $(codesign_notarize_user)
      CODESIGN_IDENT_PASS: $(codesign_notarize_pass)
      CODESIGN_IDENT_SHORT: $(codesign_notarize_short_id)
    # condition: startsWith(variables['build.sourceBranch'], 'refs/tags/')

  - script: ./CI/before-deploy-osx.sh
    condition: ne(variables['Build.Reason'], 'PullRequest')
    displayName: 'Package DMG'

  - bash: |
      mkdir -p ./nightly
      find ./build -name \*.dmg -exec cp -PR \{\} ./nightly \;
    displayName: 'Save nightly DMG'
    condition: ne(startsWith(variables['Build.SourceBranch'], 'refs/tags/'), true)

  - task: PublishBuildArtifacts@1
    condition: and(ne(variables['Build.Reason'], 'PullRequest'), ne(variables['Build.SourceBranch'], 'refs/tags/'))
    displayName: 'Publish nightly DMG'
    inputs:
      pathtoPublish: './nightly'
      artifactName: build

  - bash: |
      mkdir -p ./update
      VERSION=$($(Build.Build.SourceBranch) | cut -d/ -f3)
      find ./build -name \*.dmg -exec cp -PR \{\} ./update/telley-viewer-${VERSION}.dmg \;
      /tmp/sparkle/bin/generate_appcast -f $(sparkleKey.secureFilePath) ./update
    displayName: 'Save versioned DMG'
    #condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')

  - task: S3Upload@1
    displayName: 'Publish update to S3'
    #condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
    inputs:
      awsCredentials: 'telley-sparkle-updates'
      regionName: 'us-east-1'
      bucketName: 'telley-sparkle-updates'
      globExpressions: '**'
      filesAcl: 'public-read'
      sourceFolder: './update'


