# https://aka.ms/yaml

variables:
  CMAKE_PREFIX_PATH: /usr/local/opt/qt5/lib/cmake
  CEF_BUILD_VERSION: 3.3282.1726.gc8368c8 
  CEF_VERSION: 3.3440.1805.gbe070f9
  TWITCH-CLIENTID: $(twitch_clientid)
  TWITCH-HASH: $(twitch_hash)
  MIXER-CLIENTID: $(mixer_clientid)
  MIXER-HASH: $(mixer_hash)
  RESTREAM-CLIENTID: $(restream_clientid)
  RESTREAM-HASH: $(restream_hash)

jobs:
- job: 'Build_macOS'
  pool:
    vmImage: 'macos-10.15'
  steps:
  - script: git submodule update --init --recursive
    displayName: 'Checkout Submodules'

  - script: ./CI/install-dependencies-osx.sh
    displayName: 'Install Dependencies'

  #- task: InstallAppCertificate@2
  #  inputs:
  #    certSecureFile: 'identity.p12'

  #- task: InstallAppleProvisioningProfile@1
  #  inputs:
  #    provProfileSecureFile: 'profile.mobileprovision'

  - script: ./CI/before-script-osx.sh
    displayName: 'Configure CMake'

  - bash: |
      cd ./build
      make -j4
      cd -
    displayName: 'Build'

  - script: ./CI/after-build-osx.sh
    displayName: 'Prepare app'

  - script: ./CI/before-deploy-osx.sh
    condition: ne(variables['Build.Reason'], 'PullRequest')
    displayName: 'Package dmg'

  - bash: |
      mkdir -p ./nightly
      find ./build -name \*.dmg -exec cp -PR \{\} ./nightly/ \;
    displayName: 'Save dmg'

  - task: PublishBuildArtifacts@1
    condition: ne(variables['Build.Reason'], 'PullRequest')
    inputs:
      pathtoPublish: './nightly'
      artifactName: build

#- job: 'Build_Windows32'
#  pool:
#    vmImage: 'vs2017-win2016'
#  steps:
#  - script: git submodule update --init --recursive
#    displayName: 'Checkout Submodules'
#  - script: ./CI/install-qt-win.cmd
#    displayName: 'Install QT'
#  - script: ./CI/install-script-win.cmd
#    displayName: 'Download / Setup Deps / Run CMake'
#  - task: MSBuild@1
#    displayName: 'Build 32-bit'
#    inputs: 
#      msbuildArguments: '/m /p:Configuration=RelWithDebInfo'
#      solution: .\build32\obs-studio.sln
#  - script: ./CI/before-deploy-win.cmd
#    condition: ne(variables['Build.Reason'], 'PullRequest')
#    displayName: 'Before deploy'
#  - task: PublishBuildArtifacts@1
#    condition: ne(variables['Build.Reason'], 'PullRequest')
#    inputs:
#      pathtoPublish: './build'
#      artifactName: winbuild
#
#- job: 'Build_Windows64'
#  pool:
#    vmImage: 'vs2017-win2016'
#  steps:
#  - script: git submodule update --init --recursive
#    displayName: 'Checkout Submodules'
#  - script: ./CI/install-qt-win.cmd
#    displayName: 'Install QT'
#  - script: ./CI/install-script-win.cmd
#    displayName: 'Download / Setup Deps / Run CMake'
#  - task: MSBuild@1
#    displayName: 'Build 64-bit'
#    inputs: 
#      msbuildArguments: '/m /p:Configuration=RelWithDebInfo'
#      solution: .\build64\obs-studio.sln
#  - script: ./CI/before-deploy-win.cmd
#    condition: ne(variables['Build.Reason'], 'PullRequest')
#    displayName: 'Before deploy'
#  - task: PublishBuildArtifacts@1
#    condition: ne(variables['Build.Reason'], 'PullRequest')
#    inputs:
#      pathtoPublish: './build'
#      artifactName: winbuild
#
#- job: 'Build_Linux'
#  pool:
#    vmImage: 'ubuntu-16.04'
#  steps:
#  - script: git submodule update --init --recursive
#    displayName: 'Checkout Submodules'
#  - script: ./CI/install-dependencies-linux.sh
#    displayName: 'Install Dependencies'
#
#  - script: ./CI/before-script-linux.sh
#    displayName: 'CMake'
#
#  - bash: |
#      cd ./build
#      make -j4
#      cd -
#    displayName: 'Build'

