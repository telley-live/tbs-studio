# https://aka.ms/yaml

variables:
- group: 'P12 Password'
- name: CMAKE_PREFIX_PATH
  value: /usr/local/opt/qt5/lib/cmake

jobs:
- job: 'Build_macOS'
  pool:
    vmImage: 'macos-10.15'
  steps:
  - script: git submodule update --init --recursive
    displayName: 'Checkout Submodules'

  - script: ./CI/install-dependencies-osx.sh
    displayName: 'Install Dependencies'

  - task: InstallAppleCertificate@2
    inputs:
      certSecureFile: 'telley.p12'
      certPwd: $(codesign_password)
      keychain: temp

  - script: ./CI/before-script-osx.sh
    displayName: 'Configure CMake'

  - bash: |
      cd ./build
      make -j4
      cd -
    displayName: 'Build'

  - script: ./CI/after-build-osx.sh
    displayName: 'Prepare app'
  
  - bash: |
      cd ./build
      codesign -v --deep -s "${CODESIGN_IDENTITY}" --force "Telley Viewer.app" -o runtime --entitlements "../CI/install/osx/entitlements.plist"
    displayName: 'Sign app'
    env:
      CODESIGN_IDENTITY: $(codesign_identity)

  - script: ./CI/before-deploy-osx.sh
    condition: ne(variables['Build.Reason'], 'PullRequest')
    displayName: 'Package dmg'

  - task: PublishBuildArtifacts@1
    condition: ne(variables['Build.Reason'], 'PullRequest')
    inputs:
      pathtoPublish: './nightly'
      artifactName: build

#- job: 'Build_Windows32'
#  pool:
#    vmImage: 'vs2017-win2016'
#  steps:
#  - script: git submodule update --init --recursive
#    displayName: 'Checkout Submodules'
#  - script: ./CI/install-qt-win.cmd
#    displayName: 'Install QT'
#  - script: ./CI/install-script-win.cmd
#    displayName: 'Download / Setup Deps / Run CMake'
#  - task: MSBuild@1
#    displayName: 'Build 32-bit'
#    inputs: 
#      msbuildArguments: '/m /p:Configuration=RelWithDebInfo'
#      solution: .\build32\obs-studio.sln
#  - script: ./CI/before-deploy-win.cmd
#    condition: ne(variables['Build.Reason'], 'PullRequest')
#    displayName: 'Before deploy'
#  - task: PublishBuildArtifacts@1
#    condition: ne(variables['Build.Reason'], 'PullRequest')
#    inputs:
#      pathtoPublish: './build'
#      artifactName: winbuild
#
#- job: 'Build_Windows64'
#  pool:
#    vmImage: 'vs2017-win2016'
#  steps:
#  - script: git submodule update --init --recursive
#    displayName: 'Checkout Submodules'
#  - script: ./CI/install-qt-win.cmd
#    displayName: 'Install QT'
#  - script: ./CI/install-script-win.cmd
#    displayName: 'Download / Setup Deps / Run CMake'
#  - task: MSBuild@1
#    displayName: 'Build 64-bit'
#    inputs: 
#      msbuildArguments: '/m /p:Configuration=RelWithDebInfo'
#      solution: .\build64\obs-studio.sln
#  - script: ./CI/before-deploy-win.cmd
#    condition: ne(variables['Build.Reason'], 'PullRequest')
#    displayName: 'Before deploy'
#  - task: PublishBuildArtifacts@1
#    condition: ne(variables['Build.Reason'], 'PullRequest')
#    inputs:
#      pathtoPublish: './build'
#      artifactName: winbuild
#
#- job: 'Build_Linux'
#  pool:
#    vmImage: 'ubuntu-16.04'
#  steps:
#  - script: git submodule update --init --recursive
#    displayName: 'Checkout Submodules'
#  - script: ./CI/install-dependencies-linux.sh
#    displayName: 'Install Dependencies'
#
#  - script: ./CI/before-script-linux.sh
#    displayName: 'CMake'
#
#  - bash: |
#      cd ./build
#      make -j4
#      cd -
#    displayName: 'Build'

